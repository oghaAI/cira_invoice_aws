/**
 * CIRA Invoice Processing System - Job Result Model
 *
 * Defines the JobResult entity containing OCR outputs and LLM-extracted structured data.
 * This model stores the final processing outcomes and intermediate data for debugging,
 * cost tracking, and performance monitoring purposes.
 *
 * Database Mapping:
 * - Maps to 'job_results' table in PostgreSQL
 * - Uses JSONB storage for extractedData (flexible schema evolution)
 * - One-to-one relationship with Job entity (foreign key: job_id)
 * - Supports UPSERT operations for incremental updates during processing
 *
 * Processing Pipeline Integration:
 * 1. OCR Step: Populates rawOcrText, ocrProvider, ocrDurationMs, ocrPages
 * 2. LLM Step: Populates extractedData, confidenceScore, tokensUsed
 * 3. UPSERT pattern allows each step to update independently
 *
 * @see docs/architecture-mvp.md - JobResult Model section
 * @see docs/stories/3.2.invoice-schema-zod.md - Invoice data schema details
 * @see packages/database/src/index.ts - Database operations implementation
 */

/**
 * Job processing result entity containing both OCR and LLM extraction outputs.
 *
 * Data Storage Strategy:
 * - JSONB for extractedData enables flexible invoice schema evolution
 * - Numeric fields support cost tracking and performance optimization
 * - Raw OCR text preserved for debugging and potential re-processing
 * - Metadata fields enable comprehensive monitoring and analytics
 *
 * Schema Evolution Support:
 * - extractedData structure can evolve without breaking database schema
 * - Zod validation ensures type safety at application layer
 * - field_reasoning and field_confidence maps support ML model transparency
 */
export interface JobResult {
  /** Unique result identifier (UUID generated by database) */
  id: string;
  /** Foreign key reference to parent Job entity */
  jobId: string;
  /**
   * Structured invoice data extracted by LLM processing (stored as JSONB).
   *
   * Contains Zod-validated invoice fields from Story 3.2:
   * - Core invoice fields (invoice_date, invoice_number, amounts, etc.)
   * - field_reasoning: Record<string, string> - Concise reasoning for each field
   * - field_confidence: Record<string, 'low'|'medium'|'high'> - Confidence levels
   *
   * Schema is evolvable: new optional/nullable fields can be added without breaking changes.
   * @see docs/stories/3.2.invoice-schema-zod.md
   */
  extractedData: unknown | null;
  /** Overall confidence score for the entire extraction (0.0-1.0 range) */
  confidenceScore: number | null;
  /** Number of tokens consumed by LLM processing (for cost tracking and billing) */
  tokensUsed: number | null;
  /** Complete raw OCR text output (preserved for debugging and potential re-processing) */
  rawOcrText: string | null;
  /** OCR service provider identifier (e.g., "docling", "textract", "vision-api") */
  ocrProvider: string | null;
  /** OCR processing duration in milliseconds (for performance monitoring and SLA tracking) */
  ocrDurationMs: number | null;
  /** Number of pages processed by OCR (for billing calculations and complexity assessment) */
  ocrPages: number | null;
  /** Timestamp when result was created or last updated */
  createdAt: Date;
}
